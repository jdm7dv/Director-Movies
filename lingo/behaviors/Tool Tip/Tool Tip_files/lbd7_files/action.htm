<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0120)http://www.behaviors.com/lbd7/action.lasso?-database=d7lbd.FP4&-layout=LBDbrowse&-response=detail.html&-recid=25&-search -->
<HTML><HEAD><TITLE></TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1252">
<META content="MSHTML 5.50.3825.1300" name=GENERATOR></HEAD>
<BODY text=black vLink=#0000dd link=#007700 bgColor=#ffffff>
<BLOCKQUOTE>
  <P>
  <CENTER></CENTER>
  <P></P>
  <H2 align=center>Tool Tip Plus</H2>
  <P><BR></P>
  <TABLE width="95%" border=0>
    <TBODY>
    <TR>
      <TD bgColor=#000000><B><FONT color=#ffffff>191</FONT></B></TD>
      <TD bgColor=#000000><B><FONT color=#ffffff>Tool Tip 
Plus</FONT></B></TD></TR>
    <TR>
      <TD bgColor=#000066><FONT color=#ffffff size=+3>D</FONT><FONT 
        color=#ffffff><B>escription</B></FONT></TD>
      <TD bgColor=#cccccc>A really nice tool tip behavior that automatically 
        creates the tool tip field and places it on stage. Uses the same field 
        for all tips and dynamically resizes the field according to the text of 
        the tool tip. Allows changing the back and fore color, precise alignment 
        options, and tool tip grouping. Grouping makes the tool tips behave like 
        true system tool tips. Currently, this may only work on PC's but with a 
        little tweaking should be fine on Mac's. The behavior uses Arial for the 
        font, but could use helvetica too. A must have if you need tool tips in 
        your project.</TD></TR>
    <TR>
      <TD bgColor=#000066><FONT color=#ffffff size=+3>A</FONT><FONT 
        color=#ffffff><B>uthor</B></FONT></TD>
      <TD bgColor=#cccccc><B>Dave Mennenoh</B>, &lt;<B><A 
        href="mailto:dmennenoh@hotmail.com?subject=Tool Tip Plus">mailto:dmennenoh@hotmail.com?subject=Tool 
        Tip Plus</A></B>&gt;&nbsp;&nbsp;&nbsp;Submitted on 
      <B>1/4/2000</B>&nbsp;</TD></TR>
    <TR>
      <TD vAlign=top bgColor=#000066><FONT color=#ffffff size=+3>C</FONT><FONT 
        color=#ffffff><B>ode</B></FONT></TD>
      <TD bgColor=#cccccc><PRE>--ToolTip Plus V1.1<BR><BR>--(c) 2000 Dave Mennenoh<BR><BR>--dmennenoh@hotmail.com<BR><BR>--The first thing for the New Year.<BR><BR>--Version History:<BR>--Version 1.1: January 3, 2000<BR>--I added tool tip grouping to the behavior which pretty much completes it acting like a true system tooltip now.<BR>--With grouping you can assign tool tips to groups so that if the mouse is moved over sprites in the group the tool tip will<BR>--appear instantly. When moved to a new group the tool tip will appear after the timout - if it's being used - and then<BR>--instantly again if the mouse stays within the group. If use tool tip grouping is set on in the behavior the timer is<BR>--implemented so that if the mouse moves outside a sprite with the behavior for more than .5 seconds it resets the group number<BR>--so the tool tip requires the time out period again before it appears. <BR>--Version 1.0 - Initial release - January 1st 2000<BR><BR>--Notes:<BR>--I tried adding a general font size fixer thingy that would allow varying font sizes but I just<BR>--couldn't get it to work reliably. So, I added enough to allow Arial 11 &amp; 12pt to work perfect. If you really want<BR>--a different size or font even, either figure it out from the code or drop me an email saying I didn't<BR>--document it enough to figure it out and I'll help if possible. But if you look at the code in the getToolStringPixLength<BR>--handler you'll see how it works. The string of the tool tip is sent to the handler - then each character is parsed<BR>--from the string and turned into its ASCII value. This value is then used to compute the index into one of the four<BR>--lists. The lists contain the width in pixels of the various characters. The combined widths are returned and used to<BR>--set the width of the text field. Whew... Yeah, it was a bitch, but I couldn't figure out any other way short of a<BR>--monospaced font and then nobody would've used it. <BR><BR>--MAC PEOPLE: Try changing the Arial references to Helvetica and see if it works. As soon as I can test it I'll modify<BR>--the code to make the change automatically.<BR><BR>--Three Global variables are used: oldToolGroup, toolChan, tipShowing<BR><BR>--The behavior finds a channel for the tool tip sprite in the showTip handler. It uses a repeat loop to count backwards<BR>--from 1000 and when it finds the first non-empty channel, it uses the channel directly after it. This way it makes sure<BR>--it puts the tool tip above all other sprites. The only problem you'll run into is if you have anything in channel 1000.<BR>--If there's a sprite in channel 1000 the behavior won't be able to find an empty channel due to the way it works. You'll<BR>--either have to modify your score, or modify the behavior if you run into a problem. An alert will tell you if it can't<BR>--find an empty channel.<BR><BR>--This behavior uses the unsupported method of puppeting a sprite onto the stage without a pre-existing placeholder.<BR>--It freaking works though, so love it. Hopefully, it'll continue to work...<BR>--If you find a bug, please let me know.<BR><BR>property toolText,toolAlignVert,toolAlignHoriz,spriteNum<BR>property toolTimeLength,toolBGColor<BR>property toolRegPoint,toolBorder,toolTextColor,toolHide<BR>property toolHAdjust,toolVAdjust,toolGroup,toolFontSize<BR><BR>on getPropertyDescriptionList me<BR>  pList=[:]<BR>  addProp pList,#toolText,[#default:"Text of Tool Tip",#format:#string,#comment:"Text of Tool Tip:"]<BR>  addProp pList,#toolFontSize,[#default:12,#format:#integer,#comment:"Font Size (11 or 12):",#range:[#min:11,#max:12]]<BR>  addProp pList,#toolTextColor,[#default:255,#format:#integer,#comment:"Tool Tip Text Color: (0-255):",#range:[#min:0,#max:255]]<BR>  addProp pList,#toolBGColor,[#default:0,#format:#integer,#comment:"Tool Tip Background Color (0-255):",#range:[#min:0,#max:255]]<BR>  addProp pList,#toolBorder,[#default:1,#format:#boolean,#comment:"Tool Tip Border ON or OFF: (border is always black)"]<BR>  addProp pList,#toolHide,[#default:1,#format:#boolean,#comment:"Hide Tool Tip When Sprite is Clicked:"]<BR>  addProp pList,#toolAlignVert,[#default:"Bottom",#format:#string,#comment:"Vertical Align Tool Tip to Top, Center or Bottom of Sprite:",#range:["Top","Center","Bottom"]]<BR>  addProp pList,#toolAlignHoriz,[#default:"Center",#format:#string,#comment:"Horizontal Align Tool Tip to Mouse Loc or Left, Center, Right of Sprite:",#range:["Mouse Loc","Left","Center","Right"]]<BR>  addProp pList,#toolRegPoint,[#default:1,#format:#boolean,#comment:"ON - Use Tool Tip's Center for Horiz. Align, or OFF Use Reg-Point (left side):"]<BR>  addProp pList,#toolHAdjust,[#default:0,#format:#integer,#comment:"Adjust Tool Tip Horizontal Spacing by x Pixels:",#range:[#min:-50,#max:50]]<BR>  addProp pList,#toolVAdjust,[#default:0,#format:#integer,#comment:"Adjust Tool Tip Vertical Spacing by x Pixels:",#range:[#min:-50,#max:50]]<BR>  addProp pList,#toolTimeLength,[#default:40,#format:#integer,#comment:"Show Tool Tip After x Ticks:",#range:[#min:0,#max:180]]<BR>  addProp pList,#toolGroup,[#default:0,#format:#integer,#comment:"Tool Tip Group Number (0 for no group):",#range:[#min:0,#max:20]]<BR>  return pList<BR>end<BR><BR>on getBehaviorDescription me<BR>  r=RETURN<BR>  t1="This behavior functions similarly to the one that ships with Director but is easier to use."<BR>  t2="It's easier because all you need to do is apply the behavior to any sprites that you want to have tool tips."<BR>  t3="Fill in the information into the dialog and that's all there is to it. The behavior will automatically"<BR>  t4="create the field (named toolTipField in castLib 1) and put the tool tip on stage, sized according to"<BR>  t5="the text you entered for it and positioined according to the seetings in the dialog. The Horizontal and"<BR>  t6="Vertical adjustment sliders let you precisely position the tool tip relative to the other alignment settings."<BR>  t7="Normally, you can leave the adjusters at 0 as the other alignment settings should suffice, but if you need"<BR>  t8="more precise positioning of your tool tip, the adjusters are there."<BR>  t9="Tooltips are always on one line no matter the length."<BR>  t10="The behavior uses 11pt. or 12pt. Arial for the font and the getToolStringPixLength handler computes"<BR>  t11="the length of the string in pixels based on 11pt. or 12pt. Arial characters."<BR>  t12="The behavior will automatically set the font and size of the tool tip member each time it uses it"<BR>  t13="to insure the size and spacing are correct."<BR>  t14="All the standard characters are supported but special characters, such as Alt-Numpad characters, are not."<BR>  t15="Basically, you can use any character you can -see- on your keyboard - Shift characters etc."<BR>  t16="If you get incorrect formatting of the tool tip it's most likely because you're using a character unsupported"<BR>  t17="by the behavior. If you're sure you're using standard characters and are still getting incorrect formatting"<BR>  t18="please send me an email at: dmennenoh@hotmail.com"<BR>  t20="Tool tip grouping allows you to put tool tips into groups so that if you trigger a tool tip within a group"<BR>  t21="and then move the mouse to another sprite within the group the tool tip will appear instantly. If the mouse"<BR>  t22="is moved off the group for more than 1/4 second, or moved to a new group, the tool tip won't reappear until"<BR>  t23="the time oue period again elapses - if being used. Note: that using groups also implements the timer"<BR>  t24="(as does using the timer to show the tool tip) so make sure it won't interfere with your app."<BR>  t25="Three Global variables ares used: oldToolGroup, toolChan, tipShowing"<BR>  tTot=t1&amp;r&amp;t2&amp;r&amp;t3&amp;r&amp;t4&amp;r&amp;t5&amp;r&amp;t6&amp;r&amp;t7&amp;r&amp;t8&amp;r&amp;t9&amp;r&amp;t10&amp;r&amp;t11&amp;r&amp;t12&amp;r&amp;t13&amp;r&amp;t14&amp;r&amp;t15&amp;r&amp;t16&amp;r&amp;t17&amp;r&amp;t18&amp;r&amp;t20&amp;r&amp;t21&amp;r&amp;t22&amp;r&amp;t23&amp;r&amp;t24&amp;r&amp;t25<BR>  return tTot<BR>end<BR><BR>on getBehaviorTooltip me<BR>  r=RETURN<BR>  t1="Attach this behavior to any sprite"<BR>  t2="you want to have generate a tool tip"<BR>  t3="when the mouse rolls over it. The"<BR>  t4="behavior automatically creates a"<BR>  t5="field member named toolTipField"<BR>  t6="and places the tool tip sprite on stage"<BR>  t7="sized according to the text of the"<BR>  t8="tool tip (always on one line) and"<BR>  t9="set to the options you pick in the"<BR>  t10="dialog."<BR>  ttot=t1&amp;r&amp;t2&amp;r&amp;t3&amp;r&amp;t4&amp;r&amp;t5&amp;r&amp;t6&amp;r&amp;t7&amp;r&amp;t8&amp;r&amp;t9&amp;r&amp;t10<BR>  return ttot<BR>end<BR><BR>on mouseEnter me<BR>  global oldToolGroup<BR>  if toolGroup&lt;&gt;0 then<BR>    if the timer&gt;15 then<BR>      oldToolGroup=0<BR>    end if<BR>  end if<BR>  if toolTimeLength&gt;0 then startTimer<BR>end<BR><BR>on beginSprite me<BR>  global tipShowing,oldToolGroup<BR>  tipShowing=0<BR>  oldToolGroup=0<BR>  n=the number of member "toolTipField" of castLib 1<BR>  if n=-1 then<BR>    memNum=new(#field, castLib 1)<BR>    member(memNum,1).name="toolTipField"<BR>    set the text of member(memNum,1)="h"<BR>    member(memNum,1).font="Arial"<BR>    if toolFontSize=11 then<BR>      member(memNum,1).fontSize=11<BR>    else<BR>      member(memNum,1).fontSize=12<BR>    end if<BR>  end if<BR>end<BR><BR>on mouseWithin me<BR>  global oldToolGroup<BR>  if toolGroup&lt;&gt;0 then<BR>    if toolGroup&lt;&gt;oldToolGroup then<BR>      if toolTimeLength&gt;0 then<BR>        if the timer&gt;toolTimeLength then<BR>          oldToolGroup=toolGroup<BR>          showTip()<BR>        end if<BR>      else<BR>        showTip()<BR>      end if<BR>    else<BR>      showTip()<BR>    end if<BR>  else<BR>    if toolTimeLength&gt;0 then<BR>      if the timer&gt;toolTimeLength then<BR>        showTip()<BR>      end if<BR>    else<BR>      showTip()<BR>    end if<BR>  end if<BR>end<BR><BR>on mouseLeave me<BR>  global tipShowing,toolChan<BR>  if tipShowing then<BR>    sprite(toolChan).memberNum=0<BR>    tipShowing=0<BR>  end if<BR>  if toolGroup&lt;&gt;0 then startTimer<BR>end<BR><BR>on mouseUp me<BR>  global tipShowing,toolChan<BR>  if tipShowing then<BR>    if toolHide then<BR>      sprite(toolChan).memberNum=0<BR>    end if<BR>  end if<BR>end<BR><BR>on showTip<BR>  global tipShowing,toolChan<BR>  if not tipShowing then<BR>    member("toolTipField",1).font="Arial"<BR>    if toolFontSize=11 then<BR>      member("toolTipField",1).fontSize=11<BR>    else<BR>      member("toolTipField",1).fontSize=12<BR>    end if<BR>    repeat with cnt=1000 down to 1<BR>      if sprite(cnt).memberNum&lt;&gt;0 then exit repeat<BR>    end repeat<BR>    toolChan=cnt+1 --tool tip channel<BR>    if toolChan&gt;1000 then<BR>      alert "No empty channel for tooltip or channel 1000 not empty."<BR>      exit<BR>    end if<BR>    tL=getToolStringPixLength(" "&amp;toolText&amp;" ")<BR>    <BR>    if toolAlignVert="Top" then<BR>      lv=(sprite(spriteNum).top)-22 --height of 11pt Arial field is 17 pixels plus 5 pixel space between tip and sprite<BR>    end if<BR>    if toolAlignVert="Bottom" then<BR>      lv=(sprite(spriteNum).bottom)+5<BR>    end if<BR>    if toolAlignVert="Center" then<BR>      spCent=((sprite(spriteNum).bottom-sprite(spriteNum).top)/2)+sprite(spriteNum).top<BR>      lv=spCent-8 -- -8 because height of tool tip is 17 pixels<BR>    end if<BR>    if toolAlignHoriz="Mouse Loc" then<BR>      if toolRegPoint then<BR>        lh=the mouseH-(tl/2)<BR>      else<BR>        lh=the mouseH<BR>      end if<BR>    end if<BR>    if toolAlignHoriz="Left" then<BR>      if toolRegPoint then <BR>        lh=sprite(spriteNum).left-((tl)/2)<BR>      else<BR>        lh=sprite(spriteNum).left<BR>      end if<BR>    end if<BR>    if toolAlignHoriz="Center" then<BR>      spCent=((sprite(spriteNum).right-sprite(spriteNum).left)/2)+sprite(spriteNum).left<BR>      if toolRegPoint then<BR>        lh=spCent-((tl)/2)<BR>      else<BR>        lh=spCent<BR>      end if<BR>    end if<BR>    if toolAlignHoriz="Right" then<BR>      if toolRegPoint then<BR>        lh=sprite(spriteNum).right-((tl)/2)<BR>      else<BR>        lh=sprite(spriteNum).right<BR>      end if<BR>    end if<BR>    lv=lv+toolVAdjust<BR>    lh=lh+toolHAdjust<BR>    sprite(toolChan).member=member("toolTipField",1)<BR>    sprite(toolChan).blend=100<BR>    sprite(toolChan).ink=0<BR>    sprite(toolChan).visible=1<BR>    member("toolTipField",1).rect=rect(lh,lv,lh+tL,lv+20)<BR>    sprite(toolChan).rect=rect(lh,lv,lh+tL,lv+20)<BR>    member("toolTipField",1).foreColor=toolTextColor<BR>    member("toolTipField",1).backColor=toolBGColor<BR>    if toolBorder then <BR>      member("toolTipField",1).border=1<BR>    else<BR>      member("toolTipField",1).border=0<BR>    end if<BR>    sprite(toolChan).puppet=1<BR>    set the text of member("toolTipField",1)=" "&amp;toolText&amp;" "<BR>    updateStage<BR>    tipShowing=1<BR>  end if<BR>end<BR><BR>on getToolStringPixLength tString<BR>  --these lists define the width in pixels for 11pt &amp; 12pt Arial only...<BR>  if toolFontSize=11 then<BR>    ---------[  ! " # $ %  &amp; ' ( ) * + , - . / : ; &lt; = &gt; ? @  [ \ ] ^ _ ` { | } ~]<BR>    specList=[3,2,4,7,6,10,7,2,4,4,5,6,3,4,3,3,3,3,6,6,6,6,11,3,3,3,5,7,4,4,2,4,6] --width in pixels special char's<BR>    ----------[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W, X,Y,Z]<BR>    alphListC=[8,7,7,7,6,6,8,7,2,5,7,6,8,7,8,6,8,7,7,6,7,8,10,7,8,7] --width in pixels Caps (A-Z)<BR>    alphListL=[6,6,6,6,6,4,6,6,2,2,5,2,10,6,6,6,6,4,6,3,6,6,10,6,6,6] --width in pixels of lower case (a-z)<BR>    numList=[6,6,6,6,6,6,6,6,6,6] --width in pixels of numbers (0-9)<BR>  else --12pt lists<BR>    ---------[  ! " # $ %  &amp; ' ( ) * + , - . / : ; &lt; = &gt; ? @  [ \ ] ^ _ ` { | } ~]<BR>    specList=[3,3,4,7,7,11,8,2,4,4,5,7,3,4,3,3,3,3,7,7,7,7,12,3,3,3,5,7,4,4,3,4,7] --width in pixels special char's<BR>    ----------[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W, X,Y,Z]<BR>    alphListC=[7,8,9,9,8,7,9,9,3,6,8,7,9,9,9,8,9,9,8,7,9,7,11,7,7,7] --width in pixels Caps (A-Z)<BR>    alphListL=[7,7,6,7,7,3,7,7,3,3,6,3,11,7,7,7,7,4,7,3,7,5,9,5,5,5] --width in pixels of lower case (a-z)<BR>    numList=[7,7,7,7,7,7,7,7,7,7] --width in pixels of numbers (0-9)<BR>  end if<BR>  adder=0<BR>  repeat with cnt=1 to tString.length<BR>    ch=char cnt of tString<BR>    keyP=charToNum(ch)<BR>    if keyP&gt;64 and keyP&lt;91 then <BR>      indx=keyP-64<BR>      cap=1<BR>    end if<BR>    if keyP&gt;96 and keyP&lt;123 then<BR>      indx=keyP-96<BR>      cap=0<BR>    end if<BR>    if keyP=32 then<BR>      indx=1<BR>      cap=2<BR>    end if<BR>    if keyP&gt;32 and keyP&lt;48 then<BR>      indx=keyP-31<BR>      cap=2<BR>    end if<BR>    if keyP&gt;47 and keyP&lt;58 then<BR>      indx=keyP-47<BR>      cap=3<BR>    end if<BR>    if keyP&gt;57 and keyP&lt;65 then<BR>      indx=keyP-41<BR>      cap=2<BR>    end if<BR>    if keyP&gt;90 and keyP&lt;97 then<BR>      indx=keyP-67<BR>      cap=2<BR>    end if<BR>    if keyP&gt;122 and keyP&lt;127 then<BR>      indx=keyP-93<BR>      cap=2<BR>    end if<BR>    case cap of<BR>      1:<BR>        adder=adder+alphListC[indx]<BR>      0:<BR>        adder=adder+alphListL[indx]<BR>      2:<BR>        adder=adder+specList[indx]<BR>      3:<BR>        adder=adder+numList[indx]<BR>    end case<BR>  end repeat<BR>  return adder<BR>end<BR></PRE></TD></TR></TBODY></TABLE>
  <P>
  <CENTER><A 
  href="http://www.behaviors.com/lbd7/action.lasso?-database=d7lbd.FP4&amp;-layout=LBDbrowse&amp;-response=%2flbd7%2fresult.html&amp;-skiprecords=10&amp;-maxRecords=10&amp;-sortField=behaviorName&amp;-sortOrder=ascend&amp;-sortField=Date&amp;-sortOrder=ascend&amp;-sortField=Number&amp;-sortOrder=ascend&amp;-logicalop=and&amp;-findall">Go 
  Back...</A> </CENTER>&nbsp;
  <P>
  <CENTER><FONT size=-2></FONT>
  <P align=center><FONT face="Arial, Helvetica, sans-serif" size=-1><I>Site 
  maintained by <A 
  href="mailto:terry@behaviors.com?subject=BEHAVIORS.COM feedback">Terry R. 
  Schussler</A></I></FONT><BR><FONT face="Arial, Helvetica, sans-serif" 
  size=-2><I>Site hosted by <A href="http://www.trevimedia.com/">Trevi Media, 
  Inc.</A></I></FONT></P>
  <P align=center>&nbsp;</P></CENTER>
  <P></P></BLOCKQUOTE></BODY></HTML>
